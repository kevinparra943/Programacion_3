
package guia3;

import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.Timer;



public class Impresora extends javax.swing.JFrame {
DefaultTableModel modelo = new DefaultTableModel();
public Estructuras colaImpresion = new Estructuras();




    public Impresora() {
        initComponents();
    modelo = new DefaultTableModel(new Object[]{"nombre de archivo", "numero de paginas"}, 0);
    jTable1.setModel(modelo);
   
    jProgressBar1.setStringPainted(true); // ver progreso como texto
    
        
    

    }



 Timer tiempo = new Timer (1000, new ActionListener ()
 {
          public void actionPerformed(ActionEvent e){
              metodo();
          } 
     });
 
    public void metodo(){
        
        Documento actual = colaImpresion.getEnImpresion();
if (actual == null ) {
        if (colaImpresion.colaVacia()) {
            jProgressBar1.setValue(0);
            jProgressBar1.setString("Cola vacía");
            tiempo.stop();
            System.out.println("Cola vacía, nada que imprimir.");
            return;
        }}
        boolean enProceso = colaImpresion.avanzarImpresion();
        actual = colaImpresion.getEnImpresion();
        
      if (actual != null ) {
        jProgressBar1.setMaximum(actual.paginas);
        jProgressBar1.setValue(actual.actual);
        jProgressBar1.setString("Imprimiendo " + actual.nombre);
        System.out.println("Iniciando impresión de: " + actual.nombre);
        jLabel6.setText(actual.getProgreso());
      } else {
    // Documento terminado, eliminar de la tabla
    if (modelo.getRowCount() > 0) {
        modelo.removeRow(0);
    }
}
 /* Avanza una página
    enImpresion.actual++;
    jProgressBar1.setValue(enImpresion.actual);
    //jProgressBar1.setString("Página " + enImpresion.actual + "/" + enImpresion.paginas + " - " + enImpresion.nombre);
    
    System.out.println("Imprimiendo " + enImpresion.nombre + " página " + enImpresion.actual + " de " + enImpresion.paginas);
      
    // ¿Terminó el documento?
    if (enImpresion.actual >= enImpresion.paginas) {
        System.out.println("Documento terminado: " + enImpresion.nombre);
        // Elimina la primera fila de la tabla (cabeza) porque justo terminamos ese documento
        if (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        enImpresion = null; // para que el próximo tome otro documento de la cola
    }
        
}*/
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("INICIAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(modelo);
        jScrollPane1.setViewportView(jTable1);

        jProgressBar1.setMaximum(10);

        jButton2.setText("AGREGAR DOCUMENTO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("PARAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Progreso total: ");

        jLabel6.setText("Paginas  - Documento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(106, 106, 106)
                                .addComponent(jLabel6)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
       
              tiempo.start();
   
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     String nombre = javax.swing.JOptionPane.showInputDialog(this, "Nombre del documento:");
    if (nombre == null || nombre.trim().isEmpty()) return;

    String paginasStr = javax.swing.JOptionPane.showInputDialog(this, "Número de páginas:");
    if (paginasStr == null) return;

    int paginas;
    try {
        paginas = Integer.parseInt(paginasStr.trim());
        if (paginas <= 0) throw new NumberFormatException();
    } catch (NumberFormatException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Valor inválido. Ingrese un entero positivo.");
        return;
    }

    Documento doc = new Documento(nombre.trim(), paginas);
    colaImpresion.agregarDocumento(doc);              // encola
    modelo.addRow(new Object[]{doc.nombre, doc.paginas}); // refleja en la tabla
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       tiempo.stop();
        jProgressBar1.setString("Pausado");
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Impresora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
